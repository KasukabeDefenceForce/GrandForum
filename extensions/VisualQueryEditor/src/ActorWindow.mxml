<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="260" height="116" 
	creationComplete="xmlActorService.send()" name="Actor" showCloseButton="true" close="PopUpManager.removePopUp(this)">
	<mx:Script>
		<![CDATA[
			import com.adobe.flex.extras.controls.springgraph.Graph;
			import com.adobe.flex.extras.controls.springgraph.Item;
			
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import vqe.*;
			
			[Bindable]
			private var app: VisualQueryEditor = VisualQueryEditor(Application.application);
			
		   	[Bindable]
		   	private var actorInfo:XMLList;

	        public function handleXML(event:ResultEvent):void
            {

                actorInfo = event.result.actor as XMLList;
				
                var actorList:Array = new Array();    
                var xmlContent:XML;
                
                for (var i:int=0; i<actorInfo.length(); i++) {
                	xmlContent = actorInfo[i];
                	actorList.push({label:xmlContent.name+" ("+xmlContent.site+")", data:xmlContent.id, name:xmlContent.name});
                	cmbActor.dataProvider = actorList;
                }
            }


	        public function handleFault(event:FaultEvent):void
	        {
	           Alert.show(event.fault.faultString, "Error retrieving actors "+app.getUrlModel());
	        }
	        
	        
	        private function addActor(): void {
				
				//if (txtName.text != "")
				//{
					if (cmbActor.value != "")
					{
						var actorName:String;
						actorName = cmbActor.selectedItem["name"];
						var actor:Actor = new Actor(parseInt(cmbActor.value.toString()), actorName);
						app.addActor(actor);
						
						var item: NodeItem = new NodeItem(actor.getAlias(), actorName+" "+actor.getAlias(), "actor");
						item.setIdDb(parseInt(cmbActor.value.toString()));
						app.txt.text+= "\nADD"+actor.getAlias();
						var g: Graph = app.getGraph();
						g.add(item);
						app.s.dataProvider = g;
						
						PopUpManager.removePopUp(this);
					}
					else
					{
						Alert.show("You have to choose an actor", "Error adding actors");
					}
				/*}
				else
				{
					Alert.show("The name for the actor is required", "Error adding actors");
				}*/
			}	

		]]>
	</mx:Script>

	<mx:HTTPService result="handleXML(event);" fault="handleFault(event);" id="xmlActorService" resultFormat="e4x"
    	url="{app.getUrlModel()}?type=actor" useProxy="false">
	</mx:HTTPService>
	
	<mx:Grid x="10" y="10">
		<mx:GridRow width="100%" height="100%">
			<mx:GridItem width="100%" height="100%">
				<mx:Label text="Actor"/>
			</mx:GridItem>
			<mx:GridItem width="100%" height="100%">
				<mx:ComboBox id="cmbActor"></mx:ComboBox>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%" height="100%">
			<mx:GridItem width="100%" height="100%" colSpan="2" horizontalAlign="center">
				<mx:Button label="Add" click="addActor()"/>
			</mx:GridItem>
		</mx:GridRow>
	</mx:Grid>
</mx:TitleWindow>
